{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAE1B,SAAwB,UAAU,CAAC,MAA4B;IAC7D,MAAM,EACJ,mBAAmB,GAAG,EAAE,EACxB,sBAAsB,GAAG,EAAE,EAC3B,KAAK,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE,EACjC,kBAAkB,GAAG,EAAE,EACvB,UAAU,GAAG,EAAE,GAChB,GAAG,MAAM,CAAC;IAEX,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,CAAC,eAAe,KAAK,QAAQ,EAAE;QACvD,MAAM,OAAO,GAAG,eAAK,CAAC,GAAG,CACvB,eAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC;YAChC,yCAAyC,eAAK,CAAC,SAAS,CACtD,iCAAiC,CAClC,kBAAkB,CACtB,CAAC;QACF,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,OAAO;KACR;IAED,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAEpE,MAAM,YAAY,mCACb,MAAM,KACT,mBAAmB,EAAE,CAAC,GAAG,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,EAC3F,sBAAsB,kCACjB,sBAAsB,KACzB,aAAa,EAAE,SAAS,KAE1B,eAAe,EAAE,QAAQ,GAC1B,CAAC;IAEF,IAAI,QAAQ,EAAE;QACZ,uCACK,YAAY,KACf,kBAAkB,EAAE,CAAC,GAAG,kBAAkB,EAAE,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,IACvF;KACH;IAED,uCACK,YAAY,KACf,UAAU,EAAE,CAAC,GAAG,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAChE,kBAAkB,EAAE,CAAC,GAAG,kBAAkB,EAAE,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,IACpF;AACJ,CAAC;AA7CD,6BA6CC;AAEQ,gCAAU","sourcesContent":["import { Config } from '@jest/types';\nimport chalk from 'chalk';\n\nexport default function withEnzyme(preset: Config.ProjectConfig) {\n  const {\n    snapshotSerializers = [],\n    testEnvironmentOptions = {},\n    haste = { defaultPlatform: null },\n    setupFilesAfterEnv = [],\n    setupFiles = [],\n  } = preset;\n\n  if (!haste || typeof haste.defaultPlatform !== 'string') {\n    const message = chalk.red(\n      chalk.bold(`\\njest-expo-enzyme: `) +\n        `The provided config must have a valid ${chalk.underline(\n          '`haste.defaultPlatform: string`'\n        )} value defined\\n`\n    );\n    console.error(message);\n    process.exit(1);\n    return;\n  }\n\n  const isNative = ['ios', 'android'].includes(haste.defaultPlatform);\n\n  const commonConfig = {\n    ...preset,\n    snapshotSerializers: [...snapshotSerializers, require.resolve('enzyme-to-json/serializer')],\n    testEnvironmentOptions: {\n      ...testEnvironmentOptions,\n      enzymeAdapter: 'react16',\n    },\n    testEnvironment: 'enzyme',\n  };\n\n  if (isNative) {\n    return {\n      ...commonConfig,\n      setupFilesAfterEnv: [...setupFilesAfterEnv, require.resolve(`./setupEnzyme.native.js`)],\n    };\n  }\n\n  return {\n    ...commonConfig,\n    setupFiles: [...setupFiles, require.resolve('jest-canvas-mock')],\n    setupFilesAfterEnv: [...setupFilesAfterEnv, require.resolve(`./setupEnzyme.web.js`)],\n  };\n}\n\nexport { withEnzyme };\n"]}